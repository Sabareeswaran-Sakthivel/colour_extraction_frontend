import*as e from"react";import{KeyFilter as t}from"primereact/keyfilter";import{Tooltip as n}from"primereact/tooltip";import{ObjectUtils as o,classNames as l,DomHandler as a}from"primereact/utils";function r(){return r=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var o in n)Object.prototype.hasOwnProperty.call(n,o)&&(e[o]=n[o])}return e},r.apply(this,arguments)}var i=e.memo(e.forwardRef((function(p,u){var f=e.useRef(u),s=f.current&&f.current.value,m=e.useMemo((function(){return o.isNotEmpty(p.value)||o.isNotEmpty(p.defaultValue)||o.isNotEmpty(s)}),[p.value,p.defaultValue,s]);e.useEffect((function(){o.combinedRefs(f,u)}),[f,u]);var c=o.isNotEmpty(p.tooltip),y=o.findDiffKeys(p,i.defaultProps),d=l("p-inputtext p-component",{"p-disabled":p.disabled,"p-filled":m},p.className);return e.createElement(e.Fragment,null,e.createElement("input",r({ref:f},y,{className:d,onInput:function(e){var n=!0;if(p.keyfilter&&p.validateOnly&&(n=t.validate(e,p.keyfilter)),p.onInput&&p.onInput(e,n),!p.onChange){var l=e.target;o.isNotEmpty(l.value)?a.addClass(l,"p-filled"):a.removeClass(l,"p-filled")}},onKeyDown:function(e){p.onKeyDown&&p.onKeyDown(e),p.keyfilter&&t.onKeyPress(e,p.keyfilter,p.validateOnly)},onPaste:function(e){p.onPaste&&p.onPaste(e),p.keyfilter&&t.onPaste(e,p.keyfilter,p.validateOnly)}})),c&&e.createElement(n,r({target:f,content:p.tooltip},p.tooltipOptions)))})));i.displayName="InputText",i.defaultProps={__TYPE:"InputText",keyfilter:null,validateOnly:!1,tooltip:null,tooltipOptions:null,onInput:null,onKeyDown:null,onPaste:null};export{i as InputText};
